#include "walls_and_holes.h"

#include <algorithm>

#include "opencv2/opencv.hpp"

const std::vector<std::vector<MyPoint>> &WallPolygons() {
  static const std::vector<std::vector<MyPoint>> &result = []() {
    auto *out = new std::vector<std::vector<MyPoint>>{

        {
            {3, 50}, {58, 50}, {58, 61}, {3, 61},
        },
        {
            {158, 3}, {171, 3}, {171, 36}, {158, 36},
        },
        {
            {101, 51}, {114, 51}, {114, 79}, {101, 79},
        },
        {
            {34, 99}, {59, 99}, {59, 109}, {34, 109},
        },
        {
            {5, 144}, {58, 144}, {58, 156}, {5, 156},
        },
        {
            {102, 117}, {114, 117}, {114, 200}, {102, 200},
        },
        {
            {35, 190}, {113, 190}, {113, 201}, {35, 201},
        },
        {
            {101, 229}, {115, 229}, {115, 275}, {101, 275},
        },
        {
            {46, 231}, {60, 231}, {60, 274}, {46, 274},
        },
        {
            {35, 311}, {114, 311}, {114, 324}, {35, 324},
        },
        {
            {98, 311}, {115, 311}, {115, 436}, {98, 436},
        },
        {
            {4, 397}, {35, 397}, {35, 410}, {4, 410},
        },
        {
            {155, 81}, {169, 81}, {169, 110}, {155, 110},
        },
        {
            {156, 140}, {169, 140}, {169, 181}, {156, 181},
        },
        {
            {156, 228}, {169, 228}, {169, 289}, {156, 289},
        },
        {
            {157, 371}, {170, 371}, {170, 408}, {157, 408},
        },
        {
            {159, 442}, {171, 442}, {171, 480}, {159, 480},
        },
        {
            {212, 46}, {224, 46}, {224, 108}, {212, 108},
        },
        {
            {213, 46}, {389, 46}, {389, 60}, {213, 60},
        },
        {
            {377, 2}, {388, 2}, {388, 236}, {377, 236},
        },
        {
            {378, 88}, {435, 88}, {435, 101}, {378, 101},
        },
        {
            {378, 147}, {491, 147}, {491, 161}, {378, 161},
        },
        {
            {268, 207}, {280, 207}, {280, 322}, {268, 322},
        },
        {
            {268, 308}, {333, 308}, {333, 322}, {268, 322},
        },
        {
            {213, 356}, {279, 356}, {279, 366}, {213, 366},
        },
        {
            {212, 356}, {224, 356}, {224, 436}, {212, 436},
        },
        {
            {211, 229}, {224, 229}, {224, 288}, {211, 288},
        },
        {
            {212, 148}, {223, 148}, {223, 189}, {212, 189},
        },
        {
            {213, 149}, {280, 149}, {280, 160}, {213, 160},
        },
        {
            {267, 89}, {279, 89}, {279, 160}, {267, 160},
        },
        {
            {322, 90}, {335, 90}, {335, 130}, {322, 130},
        },
        {
            {323, 159}, {335, 159}, {335, 204}, {323, 204},
        },
        {
            {323, 237}, {336, 237}, {336, 276}, {323, 276},
        },
        {
            {267, 401}, {281, 401}, {281, 436}, {267, 436},
        },
        {
            {322, 356}, {335, 356}, {335, 435}, {322, 435},
        },
        {
            {380, 423}, {444, 423}, {444, 437}, {380, 437},
        },
        {
            {425, 250}, {494, 250}, {494, 263}, {425, 263},
        },
        {
            {479, 198}, {494, 198}, {494, 290}, {479, 290},
        },
        {
            {434, 294}, {446, 294}, {446, 333}, {434, 333},
        },
        {
            {436, 322}, {493, 322}, {493, 335}, {436, 335},
        },
        {
            {480, 323}, {494, 323}, {494, 436}, {480, 436},
        },
        {
            {536, 265}, {549, 265}, {549, 369}, {536, 369},
        },
        {
            {536, 400}, {550, 400}, {550, 435}, {536, 435},
        },
        {
            {588, 441}, {606, 441}, {606, 478}, {588, 478},
        },
        {
            {377, 268}, {391, 268}, {391, 355}, {377, 355},
        },
        {
            {479, 77}, {491, 77}, {491, 114}, {479, 114},
        },
        {
            {480, 76}, {545, 76}, {545, 86}, {480, 86},
        },
        {
            {534, 75}, {548, 75}, {548, 225}, {534, 225},
        },
        {
            {533, 1}, {545, 1}, {545, 36}, {533, 36},
        },
        {
            {594, 37}, {639, 37}, {639, 49}, {594, 49},
        },
        {
            {590, 80}, {602, 80}, {602, 128}, {590, 128},
        },
        {
            {589, 164}, {603, 164}, {603, 275}, {589, 275},
        },
        {
            {591, 261}, {639, 261}, {639, 275}, {591, 275},
        },
    };

    return *out;
  }();
  return result;
}

const std::vector<MyPoint> &HoleCenters() {
  static const std::vector<MyPoint> &result = *new std::vector<MyPoint>{
      {300, 171}, {455, 232}, {24, 30},   {81, 96},   {25, 256},  {25, 376},
      {82, 342},  {83, 429},  {136, 95},  {135, 211}, {137, 297}, {137, 402},
      {191, 96},  {191, 149}, {191, 257}, {191, 333}, {192, 454}, {245, 182},
      {246, 334}, {301, 413}, {356, 79},  {355, 246}, {355, 360}, {409, 29},
      {410, 126}, {410, 180}, {412, 334}, {412, 403}, {411, 453}, {512, 30},
      {511, 111}, {513, 206}, {513, 359}, {564, 30},  {567, 182}, {567, 357},
      {568, 452}, {619, 67},  {620, 295}, {619, 390},
  };

  return result;
}
